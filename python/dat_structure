Dict:
dict.pop(key)
dict.[key] = value , can add a new pair of key and value 
dict.iteritems(), dict.keys(), dict.items()

You can use re.split(str) to split a string, to have better result

list.remove()
list.extend(seq) is like append, but it add all element in the seq into list, not directly add seq
list.insert(index, obj) to insert the obj into certain index

list.pop([index = -1]), to delete an element and get the value, default index is the last

str.count(char) to count the number of a character in a string

Use a list of index in matrix eg. a = np.array([[1,2,3],[4,5,6],[7,8,9]]) and a[[0,2],2] = [3,9]

list.count(element) to get the frequency of element in the list, same as str.count()

str.isdigit(), isalnum(), isalpha(), isupper(), islower() etc, use 'dir' to list all the attributes

str.replace(char1, char2) replace char1 in the str by char2 
str.split(str)
str.join(str)


******************************
Use itertools to get combinations, permutations

from itertools import combinations, permutaions

x = combiantions(sequence, n)
x = permutations(sequence, n)
******************************
